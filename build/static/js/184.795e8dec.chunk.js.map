{"version":3,"file":"static/js/184.795e8dec.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/RegisterForm.js","pages/auth/Register.js","sections/auth/AuthSocial.js"],"sourcesContent":["import React from \"react\";\nimport { FormProvider as Form } from \"react-hook-form\";\n\nconst FormProvider = ({ children, onSubmit, methods }) => {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n};\n\nexport default FormProvider;\n","import PropTypes from \"prop-types\";\n//form\nimport { useFormContext, Controller } from \"react-hook-form\";\n//@mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          value={\n            typeof field.value === \"number\" && field.value === 0\n              ? \"\"\n              : field.value\n          }\n          error={!!error}\n          helperText={error ? error.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormProvider, RHFTextField } from \"../../components/hook-form/index\";\nimport { async } from \"emoji-mart\";\nimport {\n  Alert,\n  Button,\n  IconButton,\n  InputAdornment,\n  Stack,\n} from \"@mui/material\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\n\nconst RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().required(\"User Full Name Required\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    email: \"demo@chattree.com\",\n    password: \"demo1234\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(RegisterForm),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      // submit data to backend\n    } catch (error) {\n      console.log(error);\n      reset();\n      setError(\"after submit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <RHFTextField name=\"name\" label=\"Full Name\" />\n        <RHFTextField name=\"email\" label=\"Email Address\" />\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <IconButton\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}>\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n      <Stack alignItems={\"flex-end\"} sx={{ my: 2 }}></Stack>\n      <Button\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}>\n        Register\n      </Button>\n    </FormProvider>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Link, Stack, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\n\nconst Register = () => {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h4\">Register to Chat Tree</Typography>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\">Registered User?</Typography>\n          <Link to=\"/auth/login/\" component={RouterLink} variant=\"subtitle2\">\n            Login?\n          </Link>\n        </Stack>\n        {/* Login Form */}\n        <RegisterForm />\n        {/* Auth Social */}\n        <AuthSocial />\n      </Stack>\n    </>\n  );\n};\n\nexport default Register;\n","import { Divider, IconButton, Stack } from \"@mui/material\";\nimport { GithubLogo, GoogleLogo, TwitterLogo } from \"phosphor-react\";\nimport React from \"react\";\n\nconst AuthSocial = () => {\n  return (\n    <div>\n      <Divider\n        sx={{\n          my: 2.5,\n          typography: \"overline\",\n          color: \"text.disabled\",\n          \"&::boefore, ::after\": { borderTopStyle: \"dashed\" },\n        }}>\n        {\" \"}\n        OR{\" \"}\n      </Divider>\n      <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n        <IconButton>\n          <GoogleLogo color=\"#DF3E30\" />\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <GithubLogo />\n        </IconButton>\n        <IconButton>\n          <TwitterLogo color=\"#1C9CEA\" />\n        </IconButton>\n      </Stack>\n    </div>\n  );\n};\n\nexport default AuthSocial;\n"],"names":["_ref","children","onSubmit","methods","_jsx","Form","RHFTextField","name","helperText","other","control","useFormContext","Controller","render","_ref2","field","fieldState","error","TextField","fullWidth","value","message","RegisterForm","showPassword","setShowPassword","useState","Yup","shape","required","email","password","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","_jsxs","FormProvider","async","Stack","spacing","afterSubmit","Alert","severity","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","Eye","EyeSlash","alignItems","sx","my","Button","color","size","variant","bgcolor","theme","palette","mode","Register","_Fragment","mb","position","Typography","direction","Link","to","component","RouterLink","AuthSocial","Divider","typography","borderTopStyle","justifyContent","GoogleLogo","GithubLogo","TwitterLogo"],"sourceRoot":""}