{"version":3,"file":"static/js/434.70acd875.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["warning","invariant","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","arguments","length","undefined","point","changedTouches","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","listener","eventHandler","button","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","supportsPointerEvents","isBrowser","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","reduce","distance","Math","abs","PanSession","constructor","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","distance2D","offset","timestamp","frameData","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","sync","update","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelSync","subtractPoint","_ref","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","value","toFromDifference","mix","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","AnimationType","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_ref2","key","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","type","testProp","Boolean","isString","singleColorRegex","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","c","alpha","match","floatRegex","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","asRGBA","find","concat","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","isArray","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","keys","some","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","start","stop","animate","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","cancel","timeout","performance","now","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","maxDefaults","Set","applyDefaultFilter","slice","split","unit","defaultValue","has","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","indexOf","getZeroUnit","potentialUnitType","getValueTransition","transition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","visualElement","HTMLElement","getProps","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","isPresent","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","useUnmountEffect","dragControls","groupDragControls","useConstant","subscribe","usePresence","context","PresenceContext","onExitComplete","register","id","useId","safeToRemove","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","token","fallback","exec","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","setOptions","globalProjectionState","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","_this","version","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","getPrevious","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","forEach","getCurrent","setMotionValue","hasValue","addValue","setTarget","transitionEnd","makeTargetAnimatable","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","isMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","transformProps","delete","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","size","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","willChange","animationTypeState","getState","valueTarget","shouldBlockAnimation","shouldReduceMotion","appearId","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","isNodeOrChild","parentElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","env","warnOnce","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","onFocus","onBlur","hover","onHoverStart","onHoverEnd","whileHover","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","initialMotionValues","scrapeMotionValuesFromProps","_props","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","unmount","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","isEnabled","Component","createElement","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","vars","isMounted","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","buildHTMLStyles","styleProp","renderHTML","SVGVisualElement","super","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","tagName","domAnimation","renderer","createDomVisualElement","isSVGComponent","enableHardwareAcceleration","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","getProjectionStyles","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","domMax","projectionNodeConstructor","documentNode","position"],"sourceRoot":""}