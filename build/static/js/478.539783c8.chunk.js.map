{"version":3,"file":"static/js/478.539783c8.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/ForgotPasswordForm.js","pages/auth/ForgotPassword.js"],"sourcesContent":["import React from \"react\";\nimport { FormProvider as Form } from \"react-hook-form\";\n\nconst FormProvider = ({ children, onSubmit, methods }) => {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n};\n\nexport default FormProvider;\n","import PropTypes from \"prop-types\";\n//form\nimport { useFormContext, Controller } from \"react-hook-form\";\n//@mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          value={\n            typeof field.value === \"number\" && field.value === 0\n              ? \"\"\n              : field.value\n          }\n          error={!!error}\n          helperText={error ? error.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormProvider, RHFTextField } from \"../../components/hook-form/index\";\nimport { async } from \"emoji-mart\";\nimport {\n  Alert,\n  Button,\n  IconButton,\n  InputAdornment,\n  Stack,\n} from \"@mui/material\";\n\nconst ForgotPasswordForm = () => {\n  const ForgotPasswordSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n  });\n\n  const defaultValues = {\n    email: \"demo@chattree.com\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ForgotPasswordForm),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      // submit data to backend\n    } catch (error) {\n      console.log(error);\n      reset();\n      setError(\"after submit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <RHFTextField name=\"email\" label=\"Email Address\" />\n      </Stack>\n      <Stack alignItems={\"flex-end\"} sx={{ my: 2 }}></Stack>\n      <Button\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}>\n        Retrive Password?\n      </Button>\n    </FormProvider>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport { Link, Stack, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport ForgotPasswordForm from \"../../sections/auth/ForgotPasswordForm\";\n\nconst ForgotPassword = () => {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h4\">Reset Your Password</Typography>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\">Already Registered</Typography>\n          <Link to=\"/auth/login/\" component={RouterLink} variant=\"subtitle2\">\n            Login?\n          </Link>\n        </Stack>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\">New User?</Typography>\n          <Link to=\"/auth/register/\" component={RouterLink} variant=\"subtitle2\">\n            Create New User?\n          </Link>\n        </Stack>\n        {/* Login Form */}\n        <ForgotPasswordForm />\n      </Stack>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["_ref","children","onSubmit","methods","_jsx","Form","RHFTextField","name","helperText","other","control","useFormContext","Controller","render","_ref2","field","fieldState","error","TextField","fullWidth","value","message","ForgotPasswordForm","Yup","shape","email","required","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","_jsxs","FormProvider","async","Stack","spacing","afterSubmit","Alert","severity","label","alignItems","sx","my","Button","color","size","type","variant","bgcolor","theme","palette","mode","ForgotPassword","_Fragment","mb","position","Typography","direction","Link","to","component","RouterLink"],"sourceRoot":""}