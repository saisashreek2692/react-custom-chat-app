{"version":3,"file":"static/js/960.55c94220.chunk.js","mappings":"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","sources":["pages/dashboard/Chats.js","components/StyledBadge.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/MsgTypes.js","components/Conversation/Message.js","components/Conversation/index.js","components/Contact.js","components/SharedMessages.js","components/StarredMessages.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  InputBase,\r\n  Stack,\r\n  Typography,\r\n  alpha,\r\n  styled,\r\n  Badge,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { ArchiveBox, CircleDashed, MagnifyingGlass } from \"phosphor-react\";\r\nimport React from \"react\";\r\nimport { ChatList } from \"../../data/index\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatElement = ({ id, name, img, msg, time, unread, online }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F0F4FA\"\r\n            : theme.palette.background.default,\r\n      }}\r\n      p={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Stack direction=\"row\" spacing={2}>\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\">\r\n              <Avatar src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n            <Typography variant=\"caption\">{msg}</Typography>\r\n          </Stack>\r\n          <Stack spacing={2} alignItems={\"center\"}>\r\n            <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\r\n              {time}\r\n            </Typography>\r\n            <Badge color=\"primary\" badgeContent={unread} />\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: 20,\r\n  backgroundColor: alpha(theme.palette.background.default, 1),\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    //vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst Chats = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        width: 320,\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F8FAFF\"\r\n            : theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 0px rgba(0, 0, 0, 0.25)\",\r\n      }}>\r\n      <Stack p={2} spacing={2} sx={{ height: \"100vh\" }}>\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\">\r\n          <Typography variant=\"h5\">Chats</Typography>\r\n          <IconButton>\r\n            <CircleDashed />\r\n          </IconButton>\r\n        </Stack>\r\n        <Stack sx={{ width: \"100%\" }}>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <MagnifyingGlass color=\"#709CE6\" />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search....\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n        </Stack>\r\n        <Stack spacing={1}>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1.5}>\r\n            <ArchiveBox size={24} />\r\n            <Button>Archive</Button>\r\n          </Stack>\r\n          <Divider />\r\n        </Stack>\r\n        <Stack\r\n          spacing={2.4}\r\n          direction=\"column\"\r\n          sx={{ flexGrow: 1, overflow: \"scroll\", height: \"100%\" }}>\r\n          <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n            <Stack spacing={2.4}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: \"#676767\" }}>\r\n                Pinned\r\n              </Typography>\r\n              {ChatList.filter((el) => el.pinned).map((el) => {\r\n                return <ChatElement {...el} />;\r\n              })}\r\n            </Stack>\r\n            <Stack spacing={2.4}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: \"#676767\" }}>\r\n                All Chats\r\n              </Typography>\r\n              {ChatList.filter((el) => !el.pinned).map((el) => {\r\n                return <ChatElement {...el} />;\r\n              })}\r\n            </Stack>\r\n          </SimpleBarStyle>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import { Badge, styled } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default StyledBadge;\r\n","import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\r\nimport StyledBadge from \"../StyledBadge\";\r\nimport { ToggleSidebar } from \"../../redux/slices/app\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        width: \"100%\",\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F8FAFF\"\r\n            : theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n      }}>\r\n      <Stack\r\n        alignItems={\"center\"}\r\n        direction={\"row\"}\r\n        justifyContent={\"space-between\"}\r\n        sx={{ width: \"100%\", height: \"100%\" }}>\r\n        <Stack\r\n          onClick={() => {\r\n            dispatch(ToggleSidebar());\r\n          }}\r\n          direction={\"row\"}\r\n          spacing={2}>\r\n          <Box>\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\">\r\n              <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n            </StyledBadge>\r\n          </Box>\r\n          <Stack spacing={0.2}>\r\n            <Typography variant=\"subtitle2\">{faker.name.fullName()}</Typography>\r\n            <Typography variant=\"caption\">Online</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={3}>\r\n          <IconButton>\r\n            <VideoCamera />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Phone />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MagnifyingGlass />\r\n          </IconButton>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <IconButton>\r\n            <CaretDown />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  styled,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Camera,\r\n  File,\r\n  Image,\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Smiley,\r\n  Sticker,\r\n  User,\r\n} from \"phosphor-react\";\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { useState } from \"react\";\r\n\r\nconst StyledInput = styled(TextField)((theme) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px\",\r\n    paddingBottom: \"12px\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <Image size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n  },\r\n  {\r\n    color: \"#1b8cfe\",\r\n    icon: <Sticker size={24} />,\r\n    y: 172,\r\n    title: \"Stickers\",\r\n  },\r\n  {\r\n    color: \"#0172e4\",\r\n    icon: <Camera size={24} />,\r\n    y: 242,\r\n    title: \"Image\",\r\n  },\r\n  {\r\n    color: \"#0159b2\",\r\n    icon: <File size={24} />,\r\n    y: 312,\r\n    title: \"Document\",\r\n  },\r\n  {\r\n    color: \"#013f7f\",\r\n    icon: <User size={24} />,\r\n    y: 382,\r\n    title: \"Contact\",\r\n  },\r\n];\r\n\r\nconst ChatInput = ({ setOpenPicker }) => {\r\n  const [openActions, setOpenActions] = React.useState(false);\r\n  return (\r\n    <StyledInput\r\n      fullWidth\r\n      placeholder=\"Write a Message......\"\r\n      variant=\"filled\"\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        startAdornment: (\r\n          <Stack sx={{ width: \"max-content\" }}>\r\n            <Stack\r\n              sx={{\r\n                position: \"relative\",\r\n                display: openActions ? \"inline-block\" : \"none\",\r\n              }}>\r\n              {Actions.map((el) => (\r\n                <Tooltip placement=\"right\" title={el.title}>\r\n                  <Fab\r\n                    onClick={() => {\r\n                      setOpenActions(!openActions);\r\n                    }}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: -el.y,\r\n                      backgroundColor: el.color,\r\n                    }}\r\n                    aria-label=\"add\">\r\n                    {el.icon}\r\n                  </Fab>\r\n                </Tooltip>\r\n              ))}\r\n            </Stack>\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenActions(!openActions);\r\n                }}>\r\n                <LinkSimple />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n        endAdornment: (\r\n          <InputAdornment>\r\n            <IconButton\r\n              onClick={() => {\r\n                setOpenPicker((prev) => !prev);\r\n              }}>\r\n              <Smiley />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n  const [openPicker, setOpenPicker] = useState(false);\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        width: \"100%\",\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F8FAFF\"\r\n            : theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n      }}>\r\n      <Stack direction={\"row\"} alignItems={\"center\"} spacing={3}>\r\n        <Stack sx={{ width: \"100%\" }}>\r\n          {/* Chat Input */}\r\n          <Box\r\n            sx={{\r\n              display: openPicker ? \"inline\" : \"none\",\r\n              zIndex: 10,\r\n              position: \"fixed\",\r\n              bottom: 81,\r\n              right: 100,\r\n            }}>\r\n            <Picker\r\n              theme={theme.palette.mode}\r\n              data={data}\r\n              onEmojiSelect={console.log}\r\n            />\r\n          </Box>\r\n          <ChatInput setOpenPicker={setOpenPicker} />\r\n        </Stack>\r\n        <Box\r\n          sx={{\r\n            height: 48,\r\n            width: 48,\r\n            backgroundColor: theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n          }}>\r\n          <Stack\r\n            sx={{ height: \"100%\", width: \"100%\" }}\r\n            alignItesm=\"center\"\r\n            justifyContent=\"center\">\r\n            <IconButton>\r\n              <PaperPlaneTilt color=\"#FFF\" />\r\n            </IconButton>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n  Link,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\r\nimport { Message_options } from \"../../data/index\";\r\n\r\nconst DocMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        p={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? theme.palette.background.default\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n          boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n        }}>\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"row\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.default,\r\n              borderRadius: 1,\r\n            }}>\r\n            <Image size={48} />\r\n            <Typography variant=\"caption\">Abstract.png</Typography>\r\n            <IconButton>\r\n              <DownloadSimple />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{ color: el.incoming ? theme.palette.text : \"#F0F4FA\" }}>\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOptions />}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst LinkMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        p={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? theme.palette.background.default\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n          boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n        }}>\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            spacing={3}\r\n            alignItems=\"flex-start\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}>\r\n            <img\r\n              src={el.preview}\r\n              alt={el.message}\r\n              style={{ maxHeight: 210, borderRadius: \"10px\" }}\r\n            />\r\n            <Stack spacing={2}>\r\n              <Typography variant=\"subtitle2\">Creating Chat App</Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                sx={{ color: theme.palette.primary.main }}\r\n                component={Link}\r\n                to=\"//https://www.youtube.com\">\r\n                www.youtube.com\r\n              </Typography>\r\n            </Stack>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color={el.incoming ? theme.palette.text : \"#F0F4FA\"}>\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOptions />}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst ReplyMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        p={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? theme.palette.background.default\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n          boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n        }}>\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}>\r\n            <Typography variant=\"body2\" color={theme.palette.text}>\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#F0F4FA\"}>\r\n            {el.reply}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOptions />}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MediaMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        p={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? theme.palette.background.default\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n          boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n        }}>\r\n        <Stack spacing={1}>\r\n          <img\r\n            src={el.img}\r\n            alt={el.message}\r\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\r\n          />\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#F0F4FA\"}>\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOptions />}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst TextMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        p={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? theme.palette.background.default\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n          boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n        }}>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color={el.incoming ? theme.palette.text : \"#fff\"}>\r\n          {el.message}\r\n        </Typography>\r\n      </Box>\r\n      {menu && <MessageOptions />}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst Timeline = ({ el }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Divider width=\"46%\" />\r\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\r\n        {el.text}\r\n      </Typography>\r\n      <Divider width=\"46%\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MessageOptions = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DotsThreeVertical\r\n        size={20}\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      />\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}>\r\n        <Stack spacing={1} px={1.5}>\r\n          {Message_options.map((el) => (\r\n            <MenuItem onClick={handleClick}>{el.title}</MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Timeline, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg };\r\n","import React from \"react\";\r\nimport { Box, Stack } from \"@mui/material\";\r\nimport { Chat_History } from \"../../data\";\r\nimport {\r\n  Timeline,\r\n  TextMsg,\r\n  MediaMsg,\r\n  ReplyMsg,\r\n  LinkMsg,\r\n  DocMsg,\r\n} from \"./MsgTypes\";\r\n\r\nconst Message = ({ menu }) => {\r\n  return (\r\n    <Box p={3}>\r\n      <Stack spacing={3}>\r\n        {Chat_History.map((el) => {\r\n          switch (el.type) {\r\n            case \"divider\":\r\n              return <Timeline el={el} />;\r\n            case \"msg\":\r\n              switch (el.subtype) {\r\n                case \"img\":\r\n                  //img msg\r\n                  return <MediaMsg el={el} menu={menu} />;\r\n                case \"doc\":\r\n                  // doc msg\r\n                  return <DocMsg el={el} menu={menu} />;\r\n                case \"link\":\r\n                  // link msg\r\n                  return <LinkMsg el={el} menu={menu} />;\r\n                case \"reply\":\r\n                  //reply msg\r\n                  return <ReplyMsg el={el} menu={menu} />;\r\n                default:\r\n                  // text msg\r\n                  return <TextMsg el={el} menu={menu} />;\r\n              }\r\n            default:\r\n              return <></>;\r\n          }\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Stack, Box } from \"@mui/material\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Message from \"./Message\";\r\n\r\nconst Conversation = () => {\r\n  return (\r\n    <Stack height={\"100%\"} maxHeight={\"100vh\"} width={\"auto\"}>\r\n      {/* Chat Header */}\r\n      <Header />\r\n      {/* Messages */}\r\n      <Box\r\n        width={\"100%\"}\r\n        sx={{ flexGrow: 1, height: \"100%\", overflowY: \"scroll\" }}>\r\n        <Message menu={true} />\r\n      </Box>\r\n      {/* Chat Footer */}\r\n      <Footer />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  Slide,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Bell,\r\n  CaretRight,\r\n  Phone,\r\n  Prohibit,\r\n  Star,\r\n  Trash,\r\n  VideoCamera,\r\n  X,\r\n} from \"phosphor-react\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ToggleSidebar, UpdateSidebarType } from \"../redux/slices/app\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport AntSwitch from \"../components/AntSwitch\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst BlockDailog = ({ open, handleClose }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\">\r\n      <DialogTitle>Block this Contact</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          Are you sure want to block this contact?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleClose}>Yes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst DeleteDailog = ({ open, handleClose }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\">\r\n      <DialogTitle>Delete this Chat</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          Are you sure want to delete this chat?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleClose}>Yes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst Contact = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [openBlock, setOpenBlock] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const handleCloseBlock = () => {\r\n    setOpenBlock(false);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"320px\", height: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}>\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing=\"3\">\r\n            <Typography variant=\"subtitle2\">Contact Info</Typography>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(ToggleSidebar());\r\n              }}>\r\n              <X />\r\n            </IconButton>\r\n          </Stack>\r\n        </Box>\r\n        {/* Body */}\r\n        <Stack\r\n          sx={{\r\n            height: \"100%\",\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            overflowY: \"scroll\",\r\n          }}\r\n          p={3}\r\n          spacing={3}>\r\n          <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\r\n            <Avatar\r\n              src={faker.image.avatar()}\r\n              alt={faker.name.fullName()}\r\n              sx={{ height: 64, width: 64 }}\r\n            />\r\n            <Stack spacing={0.5}>\r\n              <Typography variant=\"article\" fontWeight={600}>\r\n                {faker.name.fullName()}\r\n              </Typography>\r\n              <Typography variant=\"body2\" fontWeight={500}>\r\n                {\"+91 9966780269\"}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n            <Stack spacing={1} alignItems=\"center\">\r\n              <IconButton>\r\n                <Phone />\r\n              </IconButton>\r\n              <Typography variant=\"overline\">Voice</Typography>\r\n            </Stack>\r\n            <Stack spacing={1} alignItems=\"center\">\r\n              <IconButton>\r\n                <VideoCamera />\r\n              </IconButton>\r\n              <Typography variant=\"overline\">Video</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack spacing={0.5}>\r\n            <Typography variant=\"article\">About</Typography>\r\n            <Typography variant=\"body2\">\r\n              Hi there, I am using chat app.\r\n            </Typography>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\">\r\n            <Typography variant=\"subtitle2\"> Media, Links & Docs</Typography>\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"SHARED\"));\r\n              }}\r\n              endIcon={<CaretRight />}>\r\n              205\r\n            </Button>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            {[1, 2, 3].map((el) => (\r\n              <Box>\r\n                <img src={faker.image.food()} alt={faker.name.fullName()} />\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\">\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n              <Star size={21} />\r\n              <Typography variant=\"subtitle2\">Starred Messages</Typography>\r\n            </Stack>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"STARRED\"));\r\n              }}>\r\n              <CaretRight />\r\n            </IconButton>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\">\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n              <Bell size={21} />\r\n              <Typography variant=\"subtitle2\">Mute Notifications</Typography>\r\n            </Stack>\r\n            <AntSwitch />\r\n          </Stack>\r\n          <Divider />\r\n          <Typography variant=\"body2\">1 group in common</Typography>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n            <Stack spacing={0.5}>\r\n              <Typography variant=\"subtitle2\">Shaz Kitchen</Typography>\r\n              <Typography variant=\"caption\">\r\n                Sai, Rakesh, Vineet, You\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Button\r\n              onClick={() => {\r\n                setOpenBlock(true);\r\n              }}\r\n              startIcon={<Prohibit />}\r\n              fullWidth\r\n              variant=\"outlined\">\r\n              Block\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setOpenDelete(true);\r\n              }}\r\n              startIcon={<Trash />}\r\n              fullWidth\r\n              variant=\"outlined\">\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n          <Divider />\r\n        </Stack>\r\n      </Stack>\r\n      {openBlock && (\r\n        <BlockDailog open={openBlock} handleClose={handleCloseBlock} />\r\n      )}\r\n      {openDelete && (\r\n        <DeleteDailog open={openDelete} handleClose={handleCloseDelete} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateSidebarType } from \"../redux/slices/app\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { SHARED_DOCS, SHARED_LINKS } from \"../data\";\r\nimport { DocMsg, LinkMsg } from \"./Conversation/MsgTypes\";\r\n\r\nconst SharedMessages = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <Box sx={{ width: \"320px\", height: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}>\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            spacing=\"3\">\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"CONTACT\"));\r\n              }}>\r\n              <CaretLeft />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">Shared Messages</Typography>\r\n          </Stack>\r\n        </Box>\r\n        <Tabs\r\n          sx={{ px: 2, pt: 2 }}\r\n          value={value}\r\n          onChange={handleChange}\r\n          centered>\r\n          <Tab label=\"Media\" />\r\n          <Tab label=\"Links\" />\r\n          <Tab label=\"Docs\" />\r\n        </Tabs>\r\n        {/* Body */}\r\n        <Stack\r\n          sx={{\r\n            height: \"100%\",\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            overflowY: \"scroll\",\r\n          }}\r\n          p={3}\r\n          spacing={value === 1 ? 1 : 3}>\r\n          {(() => {\r\n            switch (value) {\r\n              case 0:\r\n                // Images\r\n                return (\r\n                  <Grid container spacing={2}>\r\n                    {[0, 1, 2, 3, 4, 5, 6].map((el) => {\r\n                      return (\r\n                        <Grid item xs={4}>\r\n                          <img\r\n                            src={faker.image.animals()}\r\n                            alt={faker.name.firstName()}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                );\r\n              case 1:\r\n                // Links\r\n                return SHARED_LINKS.map((el) => <LinkMsg el={el} />);\r\n              case 2:\r\n                // Docs\r\n                return SHARED_DOCS.map((el) => <DocMsg el={el} />);\r\n              default:\r\n                break;\r\n            }\r\n          })()}\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SharedMessages;\r\n","import React from \"react\";\r\nimport { Box, IconButton, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateSidebarType } from \"../redux/slices/app\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport Message from \"./Conversation/Message\";\r\n\r\nconst StarredMessages = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Box sx={{ width: \"320px\", height: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}>\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            spacing=\"3\">\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"CONTACT\"));\r\n              }}>\r\n              <CaretLeft />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">Starred Messages</Typography>\r\n          </Stack>\r\n        </Box>\r\n        {/* Body */}\r\n        <Stack\r\n          sx={{\r\n            height: \"100%\",\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            overflowY: \"scroll\",\r\n          }}\r\n          p={3}\r\n          spacing={3}>\r\n          <Message />\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nexport default StarredMessages;\r\n","import React from \"react\";\r\nimport Chats from \"./Chats\";\r\nimport { Stack, Box, useTheme } from \"@mui/material\";\r\nimport Conversation from \"../../components/Conversation\";\r\nimport Contact from \"../../components/Contact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SharedMessages from \"../../components/SharedMessages\";\r\nimport StarredMessages from \"../../components/StarredMessages\";\r\n\r\nconst GeneralApp = () => {\r\n  const theme = useTheme();\r\n  const { sidebar } = useSelector((store) => store.app);\r\n\r\n  return (\r\n    <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n      {/* Chats Component */}\r\n      <Chats />\r\n      <Box\r\n        sx={{\r\n          height: \"100%\",\r\n          width: sidebar.open ? \"calc(100vw - 740px)\" : \"calc(100vw - 420px)\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F0F4FA\"\r\n              : theme.palette.background.default,\r\n        }}>\r\n        {/* Conversation Chat Component */}\r\n        <Conversation />\r\n      </Box>\r\n      {/* Contact */}\r\n      {sidebar.open &&\r\n        (() => {\r\n          switch (sidebar.type) {\r\n            case \"CONTACT\":\r\n              return <Contact />;\r\n            case \"STARRED\":\r\n              return <StarredMessages />;\r\n            case \"SHARED\":\r\n              return <SharedMessages />;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        })()}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default GeneralApp;\r\n"],"names":["StyledBadge","styled","Badge","theme","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","ChatElement","id","name","img","msg","time","unread","online","useTheme","Box","sx","mode","default","p","Stack","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","Typography","fontWeight","badgeContent","Search","alpha","marginRight","marginLeft","SearchIconWrapper","padding","pointerEvents","display","StyledInputBase","InputBase","paddingLeft","IconButton","placeholder","inputProps","size","Button","Divider","flexGrow","overflow","timeout","clickOnTrack","ChatList","el","pinned","map","dispatch","useDispatch","onClick","ToggleSidebar","faker","alt","orientation","flexItem","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","y","title","ChatInput","setOpenPicker","React","openActions","setOpenActions","fullWidth","InputProps","disableUnderline","startAdornment","Tooltip","placement","Fab","InputAdornment","endAdornment","prev","useState","openPicker","zIndex","bottom","right","data","onEmojiSelect","console","log","primary","main","alignItesm","DocMsg","menu","incoming","text","message","MessageOptions","LinkMsg","preview","style","maxHeight","component","Link","to","ReplyMsg","reply","MediaMsg","TextMsg","Timeline","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","undefined","Menu","onClose","MenuListProps","px","Message_options","MenuItem","Chat_History","type","subtype","overflowY","Transition","props","ref","Slide","BlockDailog","handleClose","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","DialogActions","DeleteDailog","openBlock","setOpenBlock","openDelete","setOpenDelete","UpdateSidebarType","endIcon","AntSwitch","startIcon","value","setValue","Tabs","pt","onChange","newValue","centered","Tab","label","Grid","container","item","xs","SHARED_LINKS","SHARED_DOCS","sidebar","useSelector","store","app"],"sourceRoot":""}